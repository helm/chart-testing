name: ci
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          fetch-depth: 0

      - name: shellcheck
        uses: ludeeus/action-shellcheck@94e0aab03ca135d11a35e5bfc14e6746dc56e7e9 # v1.1.0

      - name: Setup go
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v3.3.0
        with:
          go-version-file: './go.mod'
          check-latest: true

      - uses: azure/setup-helm@b5b231a831f96336bbfeccc1329990f0005c5bb1 # v3.3
        with:
          version: v3.9.4

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@b508e2e3ef3b19d4e4146d4f8fb3ba9db644a757 # v3.1.0
        with:
          install-only: true

      - name: Install cosign
        uses: sigstore/cosign-installer@7cc35d7fdbe70d4278a0c96779081e6fac665f88 # v2.6.0

      - name: Install syft
        uses: anchore/sbom-action/download-syft@b5042e9d19d8b32849779bfe17673ff84aec702d # v0.12.0

      - name: Install k8s Kind
        uses: helm/kind-action@9e8295d178de23cbfbd8fa16cf844eec1d773a07 # v1.3.0
        with:
          install_only: true

      - name: Install tools
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

          ./setup.sh

      - name: Test
        run: |
          ./e2e-kind.sh

      - name: Lint
        run: |
          go vet -v ./...
          goimports -w -l .
          go mod tidy
          git diff --exit-code

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.0.0

      - name: Build
        run: |
          set -o nounset
          set -o pipefail

          echo "Building snapshot..."
          ./build.sh

  check-docs:
    name: check-docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v3
        with:
          go-version-file: './go.mod'
          check-latest: true

      - name: generate docs
        run: |
          go build -o ct-bin ./ct/main.go
          ./ct-bin doc-gen
          git_status="$(git status --porcelain)"
          if [[ ${git_status} ]]; then
              echo -e 'Documentation is outdated. Please update the docs\n'
              echo "${git_status}"
              exit 1
          fi

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v3
        with:
          go-version-file: './go.mod'
          check-latest: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@537aa1903e5d359d0b27dbc19ddd22c5087f3fbc # v3
        with:
          version: v1.48.0
