version: 2
jobs:
  lint:
    docker:
      - image: koalaman/shellcheck-alpine
    steps:
      - checkout
      - run:
          name: Lint
          command: |
            shellcheck -x build.sh
            shellcheck -x e2e-kind.sh
            shellcheck -x tag.sh
            shellcheck -x setup.sh
  test:
    machine:
      enabled: true
      image: circleci/classic:201808-01
    steps:
      - checkout
      - run:
          name: Install tools
          command: |
            # We need to install Golang 1.14 because the CircleCI machine image has an outdated version.
            # We need to use a CircleCI machine in order to be able to run kind.
            curl -fsSLo go.tar.gz https://dl.google.com/go/go1.14.1.linux-amd64.tar.gz
            sudo rm -r /usr/local/go
            sudo tar -C /usr/local -xzf go.tar.gz

            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl

            helm_version=v3.1.2
            curl -fsSLO "https://get.helm.sh/helm-$helm_version-linux-amd64.tar.gz"
            sudo mkdir -p "/usr/local/helm-$helm_version"
            sudo tar -xzf "helm-$helm_version-linux-amd64.tar.gz" -C "/usr/local/helm-$helm_version"
            sudo ln -s "/usr/local/helm-$helm_version/linux-amd64/helm" /usr/local/bin/helm

            curl -fsSLo kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-linux-amd64"
            chmod +x kind
            sudo mv kind /usr/local/bin/kind
      - run:
          name: Test
          command: |
            ./e2e-kind.sh
  build:
    docker:
      - image: cimg/go:1.14
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Install tools
          command: ./setup.sh
      - run:
          name: Lint
          command: |
            go vet -v ./...
            goimports -w -l .
            go mod tidy
            git diff --exit-code
      - run:
          name: Build
          command: |
            set -o nounset
            set -o pipefail

            if [[ -z "${CIRCLE_TAG:-}" ]]; then
              echo "Building snapshot..."
              ./build.sh
            else
              echo "Building release $CIRCLE_TAG..."
              echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin quay.io
              ./build.sh --release
            fi
workflows:
  version: 2
  untagged-build:
    jobs:
      - lint
      - test
      - build
  tagged-build:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
